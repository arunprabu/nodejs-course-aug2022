

file1.java => (javac) => bytecode / classfile => (JRE) => Native Machine Language 
Browser = HTML Renderer + CSS Parser + JS Engine 

JavaScript
---


ECMAScript 
--
  * standard 
  * grammar 
  * implementation
      JavaScript, JScript, ActionScript, QtScript

  ECMAScript Till 2015
  ---
    * Not Object Oriented 

  ECMAScript From June 2015 
  --
    * Object Oriented Language
    * many features 


Browsers:
---
  IE, Mozilla Firefox, Apple Safari, Opera

Browsers Family 
--
  Browser Core = HTML Renderer + CSS Parser + JS Engine 
  
  Webkit Browser Core (Open Sourced)   => Safari 
  Mozilla Browser Core (Open Sourced)  => Firefox
  
  Chromium Core (Open Sourced) = Webkit Core + Mozilla Core + Google Own Codebase (V8 JS Engine)  => Chrome 
    
  ---
  V8 JS Engine (Open Sourced)
  ---
    * js code into machine lang before exec 

  ---

  NodeJS 
  --
    * uses v8 engine 
    
Front End 
---
  JS (Raw Js or Vanilla JS)

Back End 
---
  Java, DotNet, PHP, Perl, Python, Ruby, NodeJS (JS)

Database
--
  SQL, MongoDB (JS) 

Mobile Apps
---
  Java, DotNet, Python, Ionic and React Native (JS)

Desktop Apps
--
  Java, DotNet, Electron JS (JS) 

--


--------------------------
file1.java => (javac)           => bytecode / classfile    => (JRE)                 => Machine Language
file1.aspx => (dotnet compiler) => intermediate code (dll) => (Dotnet runtime Env ) => Machine Language
                                   file1.js                => (NodeJS)              => Machine Language 
--------------------------



NodeJS Ecosystem
---
  
  fs 
  http 
  events 
  npm (client tool)
    install, update, uninstall

  1. Package Developers 
  2. Marketplace (npmjs.com  - host ) 
  3. Web Developers 


  Dependencies
  --
    1. Project Dependencies 
        * some packages are needed for the functionality of the app to work 
        * will be part of prod build 
 
        npm i express (or)
        npm i express --save (or) 
        npm i express -S 

    2. Development Dependencies
        * some packages are needed for the project to be developed
        * to have better, smoother dev workflow 
        * will never be part of prod build 

        npm i webpack --save-dev (or)
        npm i webpack -D 
        
    3. Global Dependencies 
        * will be accessible system wide 
        npm i nodemon -g (or)
        npm i nodemon --global 


    Other commands 
    --
      npm update express 
      npm uninstall express 
      TODO: Learn about npm prune 

--


